{"mappings":"YAaA,IAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,kBAG9BG,EAAQ,CAEiBC,WAAjB,KAEWC,UAAb,EACVC,MAAA,WAGoC,IAA9BC,KAAKF,SAAyB,CAIJ,IAAxBG,EAAYC,KAAKC,MAETH,KAATF,UAAW,EAEyBE,KAApCH,WAAaO,aAAY,WAC5B,IAgDqBC,EACnBC,EAGAC,EACAC,EArDIC,EAAaP,KAAKC,OA8B9B,SAAyBO,G,IAAEJ,EAAFI,EAAEJ,MAAOC,EAATG,EAASH,KAAMC,EAAfE,EAAeF,KACtClB,EAAKK,UAAUgB,YAAc,GAAYC,OAATN,EAAM,KAAWM,OAARL,EAAK,KAAQK,OAALJ,E,CAzBdK,EA0CVR,EA/CHI,EAAaR,EAgD7BK,EAAQQ,EACZC,KAAKC,MAAMX,EAAS,OAA8B,OAE9CE,EAAOO,EAAIC,KAAKC,MAAMX,EAAS,KAAoB,MACnDG,EAAOM,EAAIC,KAAKC,MAAMX,EAAS,IAAc,MAC5C,CAAEC,QAAOC,OAAMC,S,GA9CjB,IAhBD,C,EAkBJS,KAAA,WACEC,cAAclB,KAAKH,YAEkCG,KAAhDF,UAAW,C,GAyBpB,SAASgB,EAAIK,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CArBnC/B,EAAKC,SAAS+B,iBAAiB,SAAS,WACtC1B,EAAMG,O,IAGRT,EAAKI,QAAQ4B,iBAAiB,SAAS,WACrC1B,EAAMqB,M","sources":["src/js/02-timer.js"],"sourcesContent":["// const date1 = new Date();\n// const date1 = Date.now();\n\n// console.log('date1 :>> ', date1);\n// // console.dir(date);\n// setTimeout(() => {\n//   const date2 = Date.now();\n//   console.log('date2 :>> ', date2);\n//   console.log('date1 :>> ', date1);\n\n//   console.log(date2 - date1);\n// }, 3000);\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockface: document.querySelector('.js-clockface'),\n};\n\nconst timer = {\n  // создаем идентификатор интервала\n  intervalId: null,\n  // состояние идентификатора\n  isActive: false,\n  start() {\n    //   и проверяем если идентификатор активный\n    // выходим из функции и ничего не добавляем\n    if (this.isActive) {\n      return;\n    }\n    //   если не активный то делаем активным\n    const startTime = Date.now();\n    //   делаем активным\n    this.isActive = true;\n    // обращение через this так как это уже свойство объекта\n    this.intervalId = setInterval(() => {\n      const curentTime = Date.now();\n      const deltaTime = curentTime - startTime;\n      // const timeComponents = getTimeComponents(deltaTime);\n      // переменная в которую как в объект записываются часы минуты и секунды в перерасчете от дельтатайт\n      const timeComponents = getTimeComponents(deltaTime);\n      // вызываем функцию и рисуем интерфейс\n      updateClockface(timeComponents);\n      //   console.log(`${hours}:${mins}:${secs}`);\n    }, 1000);\n  },\n  stop() {\n    clearInterval(this.intervalId);\n    //   когда останавливаем состояние идентификатора меняем на фолс\n    this.isActive = false;\n  },\n};\n\n// timer.start();\nrefs.startBtn.addEventListener('click', () => {\n  timer.start();\n});\n\nrefs.stopBtn.addEventListener('click', () => {\n  timer.stop();\n});\n\n/**принимает время в милисекундах\n * высчитывает сколько в них вмещается часов/минут/секунд\n * рисует интерфейс\n */\nfunction updateClockface({ hours, mins, secs }) {\n  refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n}\n\n/**принимает число, приводит к строке и добавляет в начало 0\n * если число меньше 2х символов\n */\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\n/**\n *\n * @param {*} time принимает время в милисекундах\n * высчитывает сколько в них помещается часов/минут/секунд\n * @returns Возвращает объект со свойствами hours, mins, secs\n */\nfunction getTimeComponents(time) {\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  return { hours, mins, secs };\n}\n"],"names":["$84b9dae4df53835d$var$refs","startBtn","document","querySelector","stopBtn","clockface","$84b9dae4df53835d$var$timer","intervalId","isActive","start","this","startTime","Date","now","setInterval","time","hours","mins","secs","curentTime","param","textContent","concat","$84b9dae4df53835d$var$updateClockface","$84b9dae4df53835d$var$pad","Math","floor","stop","clearInterval","value","String","padStart","addEventListener"],"version":3,"file":"02-timer.2f98b6bd.js.map"}